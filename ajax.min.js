var ajax=function(d){
	var _=null,u=void 0,l='length',o=Object;
	if(d.url===u){
		throw Error('Error: url not defined!');
	}
	s=this;
	s.a=d.url;
	s.m=(d.method!=u && (d.method instanceof String))?d.method.toUpperCase():'GET';
	s.x=new XMLHttpRequest();
	s.d=(d.data!=void 0  && d.data instanceof FormData)?d.data:new FormData();
	s.h=(d.headers instanceof o && o.keys(d.headers).length>0)?d.headers:{};
	s.b=(d.beforeSend)?d.beforeSend:_;
	s.e=(d.onError)?d.onError:_;
	s.c=(d.success)?d.success:_;
	if(s.m=='POST'){
		if(o.keys(d.data)[l]>0 && d.data instanceof o && !(d.data instanceof FormData)){
			for(var i in d.data){
				if(d.data[i]!=_){
					s.d.append(i,d.data[i]);
				}
			}
		}
	}else if(s.m=='GET'){
		if(o.keys(s.d)[l]>0){
			g="";
			for(let [n,v] of s.d){
				g+=n+"="+v+"&";
			}
			g=g.slice(0,-1);
			s.a+=((g[l]>0)?((s.a.indexOf("?")>-1)?"?":"&")+g:'');
		}
	}
	s.x.open(s.m,s.a);
	if(o.keys(s.h)[l]>0){
		for(let [n,v] of s.h){
			s.x.setRequestHeader(n,v);
		}
	}
	s.x.onreadystatechange=function(){
		if(s.x.readyState!=4){
			return;
		}
		if(s.x.readyState==4){
			if(s.x.status==200){
				if(s.c!=_){
					return s.c(s.x.responseText);
				}
			}else{
				if(s.e!=_){
					return s.e();
				}
			}
		}
	};
	if(s.b!=_){
		s.b();
	}
	s.x.send(s.d);
};